{"ast":null,"code":"var _jsxFileName = \"/Users/jonathanandersson/projects/Udemy-react/react-complete-guide/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport React, { useState } from \"react\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [yearSelected, setYearSelected] = useState(\"2021\");\n\n  const filterSelectionHandler = yearSelected => {\n    setYearSelected(yearSelected);\n    console.log(yearSelected);\n  };\n\n  const filteredExpense = props.expense.filter(item => item.date.getFullYear().toString() === yearSelected);\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpense.length > 0) {\n    expensesContent = filteredExpense.map(item => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: item.title,\n      amount: item.amount,\n      date: item.date\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selectedYear: yearSelected,\n        onFilterSelected: filterSelectionHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"njONJ89DGHZMgdNIRHjm4Vcolnk=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/jonathanandersson/projects/Udemy-react/react-complete-guide/src/components/Expenses/Expenses.js"],"names":["ExpenseItem","Card","React","useState","ExpensesFilter","Expenses","props","yearSelected","setYearSelected","filterSelectionHandler","console","log","filteredExpense","expense","filter","item","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMM,sBAAsB,GAAIF,YAAD,IAAkB;AAC/CC,IAAAA,eAAe,CAACD,YAAD,CAAf;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,YAAZ;AACD,GAHD;;AAIA,QAAMK,eAAe,GAAGN,KAAK,CAACO,OAAN,CAAcC,MAAd,CACrBC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,OAAuCX,YAD3B,CAAxB;;AAGA,MAAIY,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,eAAe,CAACQ,MAAhB,GAAyB,CAA7B,EAAgC;AAC9BD,IAAAA,eAAe,GAAGP,eAAe,CAACS,GAAhB,CAAqBN,IAAD,iBACpC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,IAAI,CAACO,KAFd;AAGE,MAAA,MAAM,EAAEP,IAAI,CAACQ,MAHf;AAIE,MAAA,IAAI,EAAER,IAAI,CAACC;AAJb,OACOD,IAAI,CAACS,EADZ;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQD;;AAED,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,YAAY,EAAEjB,YADhB;AAEE,QAAA,gBAAgB,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGU,eALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAlCD;;GAAMd,Q;;KAAAA,Q;AAoCN,eAAeA,QAAf","sourcesContent":["import \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport React, { useState } from \"react\";\nimport ExpensesFilter from \"./ExpensesFilter\";\n\nconst Expenses = (props) => {\n  const [yearSelected, setYearSelected] = useState(\"2021\");\n\n  const filterSelectionHandler = (yearSelected) => {\n    setYearSelected(yearSelected);\n    console.log(yearSelected);\n  };\n  const filteredExpense = props.expense.filter(\n    (item) => item.date.getFullYear().toString() === yearSelected\n  );\n  let expensesContent = <p>No expenses found.</p>;\n\n  if (filteredExpense.length > 0) {\n    expensesContent = filteredExpense.map((item) => (\n      <ExpenseItem\n        key={item.id}\n        title={item.title}\n        amount={item.amount}\n        date={item.date}\n      />\n    ));\n  }\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selectedYear={yearSelected}\n          onFilterSelected={filterSelectionHandler}\n        />\n        {expensesContent}\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}